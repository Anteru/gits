// ===================== begin_copyright_notice ============================
//
// Copyright (C) 2023 Intel Corporation
//
// SPDX-License-Identifier: MIT
//
// ===================== end_copyright_notice ==============================

= Level Zero Playback Options

:doctype: book
:toc2:
:toc: left
:encoding: utf-8
:lang: en

:blank: pass:[ +]

:language: {basebackend@docbook:c++:cpp}

== Notice

Copyright (c) 2023 Intel Corporation.

== Overview
This section documents features that might be enabled during recording in GITS configuration file or during playback appending options to the GITS Player binary.

== Recording Features

* `LevelZero.Capture.Mode` -
Mode of operation of LevelZero capture, allowed values are `All`, `Kernel`
* `LevelZero.Capture.All` -
Mode of operation of LevelZero capture. Captures whole stream. It is the default behavior.
* `LevelZero.Capture.Kernel` -
Mode of operation of LevelZero capture. Captures subcapture. See xref:subcaptures.asciidoc[subcaptures section] for more information.

* `LevelZero.Utilities.DumpKernels` -
Generates kernel buffers and memory layout.
May inject synchronization and buffer/image reads API calls.
The xref:subcaptures.asciidoc#Nomenclature[nomenclature] is passed as second argument to the option.
Each read is to allocated memory by GITS, which is freed after synchronization.

* `LevelZero.Utilities.DumpAfterSubmit` -
Used with `LevelZero.Utilities.DumpKernels`, modifies the way kernel arguments are dumped.
Injects immediate command lists, reads and synchronization points after command list submission instead of each kernel submission.
Reduces overhead cost of allocated memory by GITS.
Must be used with caution.
If kernel argument was overwritten by many kernels, the output buffer would have the value after the last executed kernel that used it.
Gathering comparison data during playback must be used with equivalent option `--l0CaptureAfterSubmit` to match the behavior.


* `LevelZero.Utilities.DumpImages` - Used with `LevelZero.Utilities.DumpKernels`.
Capture images in addition to buffers.
Assumption is that they all are 2D RGBA8 images.

* `LevelZero.Utilities.BufferResetAfterCreate` - Nullifies allocations immediately after their creation to produce deterministic results during comparison. Injects writes, moreover it saves

* `LevelZero.Utilities.NullIndirectPointersInBuffer` - Nullifies output buffer's indirection pointers in order to produce deterministic results during verification step. It requires `l0_gits_indirect_access_pointers_locations` extension in order for this option to be effective.

== Playback Features

* `--l0CaptureKernels <range>` - Generates kernel buffers and memory layout.
May inject synchronization and buffer/image reads API calls.
The xref:subcaptures.asciidoc#Nomenclature[nomenclature] is passed as second argument to the option.
Each read is to allocated memory by GITS, which is freed after synchronization.

* `--l0DumpSpv` - Dumps SPIRV files on zeModuleCreate API call directly from the `pInputModule` of size `inputSize` fields in descriptor to the `l0Programs` folder.
Requires module format: `ZE_MODULE_FORMAT_IL_SPIRV`.

* `--l0CaptureAfterSubmit` - used with `--l0CaptureKernels`, modifies the way kernel arguments are dumped.
Injects immediate command lists, reads and synchronization points after command list submission instead of each kernel submission.
Reduces overhead cost of allocated memory by GITS.
Must be used with caution.
If workload has been recorded without this option, created reference buffers could be different than with this option.

* `--l0InjectBufferResetAfterCreate` - Nullifies allocations immediately after their creation to produce deterministic results during comparison.

* `--l0DisableNullIndirectPointersInBuffer` - used with `--l0CaptureKernels`.
Disable nullification of indirect pointers inside dumped buffers.
Stream requires `l0_gits_indirect_access_pointers_locations` extension in order for this option to be effective.

* `--l0CaptureImages` - Capture images in addition to buffers.
Assumption is that they all are 2D RGBA8 images.
Has to be used with `--l0CaptureKernels`.
