diff --git a/contrib/minizip/miniunz.c b/contrib/minizip/miniunz.c
index 0dc9b50..a2bcd53 100644
--- a/contrib/minizip/miniunz.c
+++ b/contrib/minizip/miniunz.c
@@ -318,6 +318,8 @@ static int do_extract_currentfile(uf,popt_extract_without_path,popt_overwrite,pa
     const char* password;
 {
     char filename_inzip[256];
+    char strtok_buf[256];
+    size_t len;
     char* filename_withoutpath;
     char* p;
     int err=UNZ_OK;
@@ -350,6 +352,50 @@ static int do_extract_currentfile(uf,popt_extract_without_path,popt_overwrite,pa
         p++;
     }
 
+
+    /* GITS WORKAROUND - patch for path traversal in minizip (CVE-2014-9485) */
+    /* sanitize the file path to prevent extraction outside of cwd */
+    /* this will alter some legitimate paths, but this does not affect us */
+
+    strcpy(strtok_buf, filename_inzip);
+    p = filename_inzip;
+
+    /* start splitting the path by slashes/backslashes */
+    char* path_component = strtok(strtok_buf, "/\\");
+
+    /* remove leading Windows disk drive letters (e.g. "C:") from the first component */
+    /* more info: https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats */
+    if ((path_component!=NULL) && isalpha(path_component[0]) && (path_component[1]==':'))
+    {
+        path_component += 2;
+    }
+
+    /* rewrite the path using extracted components */
+    /* it implicitly removes any leading slashes/backslashes */
+    while (path_component!=NULL)
+    {
+        len = strlen(path_component);
+
+        /* skip ".." directories and empty path components */
+        if ((len!=0) && (strcmp(path_component, "..")!=0))
+        {
+            strcpy(p, path_component);
+            p += len;
+            *p = '/';
+            p++;
+        }
+
+        path_component = strtok(NULL, "/\\");
+    }
+    if ((*filename_withoutpath)!='\0')
+    {
+        p--; /* not a directory; remove the trailing slash */
+    }
+    *p = '\0';
+
+    /* END GITS WORKAROUND */
+
+
     if ((*filename_withoutpath)=='\0')
     {
         if ((*popt_extract_without_path)==0)
